//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.8.1
//     from Assets/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""RTS Control"",
            ""id"": ""bf8d155f-31ef-4cd6-a1a6-644131cc19a7"",
            ""actions"": [
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""535132ac-1555-46ff-87da-48e9b0112798"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseLeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""9017d2ad-0476-4a7b-af0b-0f93bad51e7a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseMiddleClick"",
                    ""type"": ""Button"",
                    ""id"": ""d24230fb-299b-4383-812b-0f1d23587dee"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""4b4c5169-328d-47b1-975c-73a51e300a3f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseRightClick"",
                    ""type"": ""Button"",
                    ""id"": ""b3570d99-1e66-4275-adb5-8093784d0254"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Restart"",
                    ""type"": ""Button"",
                    ""id"": ""53bcf531-22e8-49bf-a39c-bee8b3c37428"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""dcd14dfb-0c66-48e0-bf05-1a21950588c3"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Player"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f993923d-88a7-4855-a0e2-a884084cf0ab"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Player"",
                    ""action"": ""MouseLeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""983c8c9a-42b2-4dba-9162-b276d06db9db"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Player"",
                    ""action"": ""MouseMiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed1c6981-ecfa-40f8-ae1a-207d12ca2cfb"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Player"",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d93057d1-a23c-4d50-a105-cba98fc7ffa3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Player"",
                    ""action"": ""MouseRightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""286fcca1-8909-436a-b15f-c1920bcc41bd"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Player"",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Player"",
            ""bindingGroup"": ""Player"",
            ""devices"": []
        }
    ]
}");
        // RTS Control
        m_RTSControl = asset.FindActionMap("RTS Control", throwIfNotFound: true);
        m_RTSControl_MousePosition = m_RTSControl.FindAction("MousePosition", throwIfNotFound: true);
        m_RTSControl_MouseLeftClick = m_RTSControl.FindAction("MouseLeftClick", throwIfNotFound: true);
        m_RTSControl_MouseMiddleClick = m_RTSControl.FindAction("MouseMiddleClick", throwIfNotFound: true);
        m_RTSControl_MouseScroll = m_RTSControl.FindAction("MouseScroll", throwIfNotFound: true);
        m_RTSControl_MouseRightClick = m_RTSControl.FindAction("MouseRightClick", throwIfNotFound: true);
        m_RTSControl_Restart = m_RTSControl.FindAction("Restart", throwIfNotFound: true);
    }

    ~@PlayerInput()
    {
        Debug.Assert(!m_RTSControl.enabled, "This will cause a leak and performance issues, PlayerInput.RTSControl.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // RTS Control
    private readonly InputActionMap m_RTSControl;
    private List<IRTSControlActions> m_RTSControlActionsCallbackInterfaces = new List<IRTSControlActions>();
    private readonly InputAction m_RTSControl_MousePosition;
    private readonly InputAction m_RTSControl_MouseLeftClick;
    private readonly InputAction m_RTSControl_MouseMiddleClick;
    private readonly InputAction m_RTSControl_MouseScroll;
    private readonly InputAction m_RTSControl_MouseRightClick;
    private readonly InputAction m_RTSControl_Restart;
    public struct RTSControlActions
    {
        private @PlayerInput m_Wrapper;
        public RTSControlActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MousePosition => m_Wrapper.m_RTSControl_MousePosition;
        public InputAction @MouseLeftClick => m_Wrapper.m_RTSControl_MouseLeftClick;
        public InputAction @MouseMiddleClick => m_Wrapper.m_RTSControl_MouseMiddleClick;
        public InputAction @MouseScroll => m_Wrapper.m_RTSControl_MouseScroll;
        public InputAction @MouseRightClick => m_Wrapper.m_RTSControl_MouseRightClick;
        public InputAction @Restart => m_Wrapper.m_RTSControl_Restart;
        public InputActionMap Get() { return m_Wrapper.m_RTSControl; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RTSControlActions set) { return set.Get(); }
        public void AddCallbacks(IRTSControlActions instance)
        {
            if (instance == null || m_Wrapper.m_RTSControlActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RTSControlActionsCallbackInterfaces.Add(instance);
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @MouseLeftClick.started += instance.OnMouseLeftClick;
            @MouseLeftClick.performed += instance.OnMouseLeftClick;
            @MouseLeftClick.canceled += instance.OnMouseLeftClick;
            @MouseMiddleClick.started += instance.OnMouseMiddleClick;
            @MouseMiddleClick.performed += instance.OnMouseMiddleClick;
            @MouseMiddleClick.canceled += instance.OnMouseMiddleClick;
            @MouseScroll.started += instance.OnMouseScroll;
            @MouseScroll.performed += instance.OnMouseScroll;
            @MouseScroll.canceled += instance.OnMouseScroll;
            @MouseRightClick.started += instance.OnMouseRightClick;
            @MouseRightClick.performed += instance.OnMouseRightClick;
            @MouseRightClick.canceled += instance.OnMouseRightClick;
            @Restart.started += instance.OnRestart;
            @Restart.performed += instance.OnRestart;
            @Restart.canceled += instance.OnRestart;
        }

        private void UnregisterCallbacks(IRTSControlActions instance)
        {
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @MouseLeftClick.started -= instance.OnMouseLeftClick;
            @MouseLeftClick.performed -= instance.OnMouseLeftClick;
            @MouseLeftClick.canceled -= instance.OnMouseLeftClick;
            @MouseMiddleClick.started -= instance.OnMouseMiddleClick;
            @MouseMiddleClick.performed -= instance.OnMouseMiddleClick;
            @MouseMiddleClick.canceled -= instance.OnMouseMiddleClick;
            @MouseScroll.started -= instance.OnMouseScroll;
            @MouseScroll.performed -= instance.OnMouseScroll;
            @MouseScroll.canceled -= instance.OnMouseScroll;
            @MouseRightClick.started -= instance.OnMouseRightClick;
            @MouseRightClick.performed -= instance.OnMouseRightClick;
            @MouseRightClick.canceled -= instance.OnMouseRightClick;
            @Restart.started -= instance.OnRestart;
            @Restart.performed -= instance.OnRestart;
            @Restart.canceled -= instance.OnRestart;
        }

        public void RemoveCallbacks(IRTSControlActions instance)
        {
            if (m_Wrapper.m_RTSControlActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRTSControlActions instance)
        {
            foreach (var item in m_Wrapper.m_RTSControlActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RTSControlActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RTSControlActions @RTSControl => new RTSControlActions(this);
    private int m_PlayerSchemeIndex = -1;
    public InputControlScheme PlayerScheme
    {
        get
        {
            if (m_PlayerSchemeIndex == -1) m_PlayerSchemeIndex = asset.FindControlSchemeIndex("Player");
            return asset.controlSchemes[m_PlayerSchemeIndex];
        }
    }
    public interface IRTSControlActions
    {
        void OnMousePosition(InputAction.CallbackContext context);
        void OnMouseLeftClick(InputAction.CallbackContext context);
        void OnMouseMiddleClick(InputAction.CallbackContext context);
        void OnMouseScroll(InputAction.CallbackContext context);
        void OnMouseRightClick(InputAction.CallbackContext context);
        void OnRestart(InputAction.CallbackContext context);
    }
}
